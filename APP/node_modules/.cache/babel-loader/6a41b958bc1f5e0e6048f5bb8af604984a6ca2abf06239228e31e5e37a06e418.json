{"ast":null,"code":"var _jsxFileName = \"D:\\\\News website\\\\Front end\\\\blogapp\\\\src\\\\components\\\\CategoryComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// A mock service for category operations (can be replaced with actual API calls)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockCategoryService = {\n  getCategories: async () => {\n    // Fetch existing categories (this is a mock, replace with actual API call)\n    return Array.from({\n      length: 100\n    }, (_, index) => `Category ${index + 1}`);\n  },\n  addCategory: async category => {\n    console.log(\"Category Added: \", category);\n  },\n  updateCategory: async (oldCategory, newCategory) => {\n    console.log(`Category Updated: ${oldCategory} -> ${newCategory}`);\n  },\n  deleteCategory: async category => {\n    console.log(\"Category Deleted: \", category);\n  }\n};\nexport default function CategoryComponent() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [categoryToEdit, setCategoryToEdit] = useState(\"\");\n  const [updatedCategory, setUpdatedCategory] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\"); // New state for search term\n\n  // Pagination State\n  const [currentPage, setCurrentPage] = useState(1);\n  const categoriesPerPage = 10;\n\n  // Fetch categories on component mount\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const data = await mockCategoryService.getCategories();\n      setCategories(data);\n    };\n    fetchCategories();\n  }, []);\n\n  // Filter categories based on search term\n  const filteredCategories = categories.filter(category => category.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Calculate the categories to display based on the current page and search term\n  const indexOfLastCategory = currentPage * categoriesPerPage;\n  const indexOfFirstCategory = indexOfLastCategory - categoriesPerPage;\n  const currentCategories = filteredCategories.slice(indexOfFirstCategory, indexOfLastCategory);\n\n  // Handle adding a new category\n  const handleAddCategory = async () => {\n    if (newCategory.trim()) {\n      await mockCategoryService.addCategory(newCategory);\n      setCategories(prevCategories => [...prevCategories, newCategory]);\n      setNewCategory(\"\");\n    } else {\n      alert(\"Please enter a valid category.\");\n    }\n  };\n\n  // Handle updating a category\n  const handleUpdateCategory = async () => {\n    if (categoryToEdit && updatedCategory.trim()) {\n      await mockCategoryService.updateCategory(categoryToEdit, updatedCategory);\n      setCategories(prevCategories => prevCategories.map(category => category === categoryToEdit ? updatedCategory : category));\n      setCategoryToEdit(\"\");\n      setUpdatedCategory(\"\");\n    } else {\n      alert(\"Please select a category to update and provide a new name.\");\n    }\n  };\n\n  // Handle deleting a category\n  const handleDeleteCategory = async category => {\n    await mockCategoryService.deleteCategory(category);\n    setCategories(prevCategories => prevCategories.filter(existingCategory => existingCategory !== category));\n  };\n\n  // Handle page change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(filteredCategories.length / categoriesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        placeholder: \"Enter new category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: categoryToEdit,\n        onChange: e => setCategoryToEdit(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select category to update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedCategory,\n        onChange: e => setUpdatedCategory(e.target.value),\n        placeholder: \"Enter updated category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateCategory,\n        children: \"Update Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-9\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              'display': 'inline'\n            },\n            children: \"Existing Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          style: {\n            'text-align': 'end'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchCategory\",\n            type: \"text\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            placeholder: \"Search categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [category, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCategory(category),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryComponent, \"EP5P8HnPMk+ExeOqeZGfNCVYn2c=\");\n_c = CategoryComponent;\nvar _c;\n$RefreshReg$(_c, \"CategoryComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","mockCategoryService","getCategories","Array","from","length","_","index","addCategory","category","console","log","updateCategory","oldCategory","newCategory","deleteCategory","CategoryComponent","_s","categories","setCategories","setNewCategory","categoryToEdit","setCategoryToEdit","updatedCategory","setUpdatedCategory","searchTerm","setSearchTerm","currentPage","setCurrentPage","categoriesPerPage","fetchCategories","data","filteredCategories","filter","toLowerCase","includes","indexOfLastCategory","indexOfFirstCategory","currentCategories","slice","handleAddCategory","trim","prevCategories","alert","handleUpdateCategory","map","handleDeleteCategory","existingCategory","handlePageChange","pageNumber","totalPages","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","disabled","_c","$RefreshReg$"],"sources":["D:/News website/Front end/blogapp/src/components/CategoryComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// A mock service for category operations (can be replaced with actual API calls)\r\nconst mockCategoryService = {\r\n  getCategories: async () => {\r\n    // Fetch existing categories (this is a mock, replace with actual API call)\r\n    return Array.from({ length: 100 }, (_, index) => `Category ${index + 1}`);\r\n  },\r\n  addCategory: async (category) => {\r\n    console.log(\"Category Added: \", category);\r\n  },\r\n  updateCategory: async (oldCategory, newCategory) => {\r\n    console.log(`Category Updated: ${oldCategory} -> ${newCategory}`);\r\n  },\r\n  deleteCategory: async (category) => {\r\n    console.log(\"Category Deleted: \", category);\r\n  },\r\n};\r\n\r\nexport default function CategoryComponent() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [categoryToEdit, setCategoryToEdit] = useState(\"\");\r\n  const [updatedCategory, setUpdatedCategory] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // New state for search term\r\n  \r\n  // Pagination State\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const categoriesPerPage = 10;\r\n\r\n  // Fetch categories on component mount\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      const data = await mockCategoryService.getCategories();\r\n      setCategories(data);\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // Filter categories based on search term\r\n  const filteredCategories = categories.filter((category) =>\r\n    category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Calculate the categories to display based on the current page and search term\r\n  const indexOfLastCategory = currentPage * categoriesPerPage;\r\n  const indexOfFirstCategory = indexOfLastCategory - categoriesPerPage;\r\n  const currentCategories = filteredCategories.slice(indexOfFirstCategory, indexOfLastCategory);\r\n\r\n  // Handle adding a new category\r\n  const handleAddCategory = async () => {\r\n    if (newCategory.trim()) {\r\n      await mockCategoryService.addCategory(newCategory);\r\n      setCategories((prevCategories) => [...prevCategories, newCategory]);\r\n      setNewCategory(\"\");\r\n    } else {\r\n      alert(\"Please enter a valid category.\");\r\n    }\r\n  };\r\n\r\n  // Handle updating a category\r\n  const handleUpdateCategory = async () => {\r\n    if (categoryToEdit && updatedCategory.trim()) {\r\n      await mockCategoryService.updateCategory(categoryToEdit, updatedCategory);\r\n      setCategories((prevCategories) =>\r\n        prevCategories.map((category) =>\r\n          category === categoryToEdit ? updatedCategory : category\r\n        )\r\n      );\r\n      setCategoryToEdit(\"\");\r\n      setUpdatedCategory(\"\");\r\n    } else {\r\n      alert(\"Please select a category to update and provide a new name.\");\r\n    }\r\n  };\r\n\r\n  // Handle deleting a category\r\n  const handleDeleteCategory = async (category) => {\r\n    await mockCategoryService.deleteCategory(category);\r\n    setCategories((prevCategories) =>\r\n      prevCategories.filter((existingCategory) => existingCategory !== category)\r\n    );\r\n  };\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Calculate the total number of pages\r\n  const totalPages = Math.ceil(filteredCategories.length / categoriesPerPage);\r\n\r\n  return (\r\n    <div className=\"category-container\">\r\n      <h1>Manage Categories</h1>\r\n\r\n      {/* Add New Category */}\r\n      <div className=\"add-category\">\r\n        <input\r\n          type=\"text\"\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n          placeholder=\"Enter new category\"\r\n        />\r\n        <button onClick={handleAddCategory}>Add Category</button>\r\n      </div>\r\n\r\n      {/* Update Existing Category */}\r\n      <div className=\"update-category\">\r\n        <select\r\n          value={categoryToEdit}\r\n          onChange={(e) => setCategoryToEdit(e.target.value)}\r\n        >\r\n          <option value=\"\">Select category to update</option>\r\n          {categories.map((category, index) => (\r\n            <option key={index} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={updatedCategory}\r\n          onChange={(e) => setUpdatedCategory(e.target.value)}\r\n          placeholder=\"Enter updated category\"\r\n        />\r\n        <button onClick={handleUpdateCategory}>Update Category</button>\r\n      </div>\r\n\r\n      {/* List Categories with Delete Option */}\r\n      <div className=\"category-list\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n            <h2 style={{'display':'inline'}}>Existing Categories</h2>\r\n            </div>\r\n            <div className=\"col-md-3\" style={{'text-align':'end'}}>\r\n      {/* Search Field */}\r\n      <input\r\n          className=\"searchCategory\"\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Search categories\"\r\n        />\r\n            </div>\r\n        </div>\r\n        <ul>\r\n          {currentCategories.map((category, index) => (\r\n            <li key={index}>\r\n              {category}\r\n              <button onClick={() => handleDeleteCategory(category)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"pagination\">\r\n        <button\r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button\r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}