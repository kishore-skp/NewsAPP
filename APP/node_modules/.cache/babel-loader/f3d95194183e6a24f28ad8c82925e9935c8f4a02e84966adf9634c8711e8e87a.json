{"ast":null,"code":"// src/services/apiService.js\nimport axios from 'axios';\n\n// Base URL of the backend server\nconst API_URL = 'http://localhost:5000/api'; // Adjust the base URL if needed\n\n// Create an axios instance with custom configurations (e.g., base URL, headers)\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n    // Add any other common headers here, like Authorization token\n  }\n});\n\n// A generic function to make an API call\nconst makeRequest = async (method, endpoint, data = null) => {\n  try {\n    const response = await axiosInstance({\n      method,\n      // The HTTP method (GET, POST, PUT, DELETE)\n      url: endpoint,\n      // The endpoint (e.g., '/save', '/getData')\n      data // The data (if applicable)\n    });\n    return response.data; // Return the response data\n  } catch (error) {\n    console.error('API Request Error:', error);\n    throw error; // Rethrow the error so the calling function can handle it\n  }\n};\n\n// Common API methods\nconst apiService = {\n  get: endpoint => makeRequest('get', endpoint),\n  post: (endpoint, data) => makeRequest('post', endpoint, data),\n  put: (endpoint, data) => makeRequest('put', endpoint, data),\n  delete: endpoint => makeRequest('delete', endpoint)\n};","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","headers","makeRequest","method","endpoint","data","response","url","error","console","apiService","get","post","put","delete"],"sources":["D:/News website/Front end/blogapp/src/client/client.js"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from 'axios';\r\n\r\n// Base URL of the backend server\r\nconst API_URL = 'http://localhost:5000/api';  // Adjust the base URL if needed\r\n\r\n// Create an axios instance with custom configurations (e.g., base URL, headers)\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Add any other common headers here, like Authorization token\r\n  },\r\n});\r\n\r\n// A generic function to make an API call\r\nconst makeRequest = async (method, endpoint, data = null) => {\r\n  try {\r\n    const response = await axiosInstance({\r\n      method,              // The HTTP method (GET, POST, PUT, DELETE)\r\n      url: endpoint,       // The endpoint (e.g., '/save', '/getData')\r\n      data,                // The data (if applicable)\r\n    });\r\n\r\n    return response.data;  // Return the response data\r\n  } catch (error) {\r\n    console.error('API Request Error:', error);\r\n    throw error;  // Rethrow the error so the calling function can handle it\r\n  }\r\n};\r\n\r\n// Common API methods\r\nconst apiService = {\r\n  get: (endpoint) => makeRequest('get', endpoint),\r\n  post: (endpoint, data) => makeRequest('post', endpoint, data),\r\n  put: (endpoint, data) => makeRequest('put', endpoint, data),\r\n  delete: (endpoint) => makeRequest('delete', endpoint),\r\n};\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C;AACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;IAChB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,aAAa,CAAC;MACnCK,MAAM;MAAe;MACrBI,GAAG,EAAEH,QAAQ;MAAQ;MACrBC,IAAI,CAAiB;IACvB,CAAC,CAAC;IAEF,OAAOC,QAAQ,CAACD,IAAI,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAE;EAChB;AACF,CAAC;;AAED;AACA,MAAME,UAAU,GAAG;EACjBC,GAAG,EAAGP,QAAQ,IAAKF,WAAW,CAAC,KAAK,EAAEE,QAAQ,CAAC;EAC/CQ,IAAI,EAAEA,CAACR,QAAQ,EAAEC,IAAI,KAAKH,WAAW,CAAC,MAAM,EAAEE,QAAQ,EAAEC,IAAI,CAAC;EAC7DQ,GAAG,EAAEA,CAACT,QAAQ,EAAEC,IAAI,KAAKH,WAAW,CAAC,KAAK,EAAEE,QAAQ,EAAEC,IAAI,CAAC;EAC3DS,MAAM,EAAGV,QAAQ,IAAKF,WAAW,CAAC,QAAQ,EAAEE,QAAQ;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}